

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 30
# db에 healthcheck 넣고 web.depends_on을 healthy로 걸어서 db준비 후 django프로젝트 뜨도록록
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=eschecker
      - POSTGRES_USER=esuser
      - POSTGRES_PASSWORD=secret
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U esuser -d eschecker"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  web:
    build: ./app
    container_name: web
    environment:
      - DJANGO_DEBUG=1
      - TZ=Asia/Seoul
      - ES_HOST=http://elasticsearch:9200
      - ES_INDEX=ssh,su
      - DEMO_MODE=true
      - SCHEDULER_ENABLED=true
      - FETCH_INTERVAL_SECONDS=10
      - DJANGO_SETTINGS_MODULE=eschecker.settings
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./app/eschecker:/code/eschecker
      - ./app/checks:/code/checks
      - ./app/manage.py:/code/manage.py
      - ./app/static:/code/static
      - ./app/templates:/code/templates
      - ./app/start.sh:/code/start.sh
    ports:
      - "8000:8000"
    command: ["bash", "/code/start.sh"]

volumes:
  pgdata: