version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    healthcheck:
      # ES가 응답하면 healthy
      test: ["CMD-SHELL", "curl -fs http://localhost:9200 > /dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  db:
    image: postgres:15-alpine
    container_name: postgresql
    environment:
      - POSTGRES_DB=eschecker
      - POSTGRES_USER=kaeunlee
      - POSTGRES_PASSWORD=qwer1234
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kaeunlee -d eschecker"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    # 로컬에서 직접 psql 접속 필요하면 열어둬 (선택)
    # ports:
    #   - "5432:5432"

  web:
    build: ./app
    container_name: web
    environment:
      - DJANGO_DEBUG=1
      - TZ=Asia/Seoul
      - DJANGO_SETTINGS_MODULE=eschecker.settings
      # DB 접속 정보 (Django settings에서 os.getenv로 읽도록)
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=eschecker
      - DB_USER=kaeunlee
      - DB_PASSWORD=qwer1234
      # Elasticsearch
      - ES_HOST=http://elasticsearch:9200
      - ES_INDEX=check
      # 앱 옵션
      - SCHEDULER_ENABLED=true
      - FETCH_INTERVAL_SECONDS=10
      - DEMO_MODE=false
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./app:/code
    ports:
      - "8000:8000"
    command: ["bash", "/code/start.sh"]

volumes:
  pgdata:
